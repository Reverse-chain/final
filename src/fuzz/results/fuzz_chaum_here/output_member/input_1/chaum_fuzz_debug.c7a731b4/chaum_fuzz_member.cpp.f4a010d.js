var data = {lines:[
{"lineNum":"    1","line":"#include \"../fuzzing_utilities.h\""},
{"lineNum":"    2","line":"#include \"../FuzzedDataProvider.h\""},
{"lineNum":"    3","line":"#include \"../../libspark/chaum_proof.h\""},
{"lineNum":"    4","line":"#include \"../../libspark/chaum.h\""},
{"lineNum":"    5","line":"#include <cassert>"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"extern \"C\" int LLVMFuzzerTestOneInput(uint8_t *buf, size_t len) {","class":"lineCov","hits":"2","order":"1","possible_hits":"2",},
{"lineNum":"    8","line":"    FuzzedDataProvider fdp(buf, len);","class":"lineCov","hits":"1","order":"2","possible_hits":"1",},
{"lineNum":"    9","line":"    FuzzedSecp256k1Object fsp(&fdp);","class":"lineCov","hits":"1","order":"4","possible_hits":"1",},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"    /** Serialization tests **/"},
{"lineNum":"   12","line":"    GroupElement F0, G0, H0, U0;","class":"lineCov","hits":"1","order":"8","possible_hits":"1",},
{"lineNum":"   13","line":"    F0.randomize();","class":"lineCov","hits":"1","order":"9","possible_hits":"1",},
{"lineNum":"   14","line":"    G0.randomize();","class":"lineCov","hits":"1","order":"10","possible_hits":"1",},
{"lineNum":"   15","line":"    H0.randomize();","class":"lineCov","hits":"1","order":"11","possible_hits":"1",},
{"lineNum":"   16","line":"    U0.randomize();","class":"lineCov","hits":"1","order":"12","possible_hits":"1",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"    const std::size_t n = fdp.ConsumeIntegralInRange(1, INT_MAX);","class":"lineCov","hits":"1","order":"13","possible_hits":"1",},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"    Scalar mu0;","class":"lineCov","hits":"1","order":"27","possible_hits":"1",},
{"lineNum":"   21","line":"    mu0.randomize();","class":"lineCov","hits":"1","order":"28","possible_hits":"1",},
{"lineNum":"   22","line":"    std::vector<Scalar> x0, y0, z0;","class":"lineCov","hits":"1","order":"29","possible_hits":"1",},
{"lineNum":"   23","line":"    x0.resize(n);","class":"lineCov","hits":"1","order":"30","possible_hits":"1",},
{"lineNum":"   24","line":"    y0.resize(n);","class":"lineCov","hits":"1","order":"31","possible_hits":"1",},
{"lineNum":"   25","line":"    z0.resize(n);","class":"lineCov","hits":"1","order":"32","possible_hits":"1",},
{"lineNum":"   26","line":"    std::vector<GroupElement> S0, T0;","class":"lineCov","hits":"1","order":"33","possible_hits":"1",},
{"lineNum":"   27","line":"    S0.resize(n);","class":"lineCov","hits":"1","order":"34","possible_hits":"1",},
{"lineNum":"   28","line":"    T0.resize(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"    for (size_t i=0; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   30","line":"        x0[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   31","line":"        y0[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   32","line":"        z0[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"        S0[i] = F0*x0[i] + G0*y0[i] + H0*z0[i];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   35","line":"        T0[i] = (U0 + G0*y0[i].negate())*x0[i].inverse();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   36","line":"    }"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"    spark::ChaumProof proof0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"    spark::Chaum chaum0(F0, G0, H0, U0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   41","line":"    chaum0.prove(mu0, x0, y0, z0, S0, T0, proof0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"    CDataStream serialized(SER_NETWORK, PROTOCOL_VERSION);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   44","line":"    serialized << proof0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"    spark::ChaumProof deserialized_proof0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   47","line":"    serialized >> deserialized_proof0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"    assert(proof0.A1 == deserialized_proof0.A1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   50","line":"    assert(proof0.t2 == deserialized_proof0.t2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   51","line":"    assert(proof0.t3 == deserialized_proof0.t3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   52","line":"    for (size_t i = 0 ; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   53","line":"        assert(proof0.A2[i] == deserialized_proof0.A2[i]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   54","line":"        assert(proof0.t1[i] == deserialized_proof0.t1[i]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   55","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    // fuzz completeness"},
{"lineNum":"   58","line":"    GroupElement F1, G1, H1, U1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   59","line":"    F1.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   60","line":"    G1.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   61","line":"    H1.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   62","line":"    U1.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"    const std::size_t n1 = fdp.ConsumeIntegralInRange(1, INT_MAX);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"    Scalar mu1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   67","line":"    mu1.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   68","line":"    std::vector<Scalar> x1, y1, z1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   69","line":"    x1.resize(n1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   70","line":"    y1.resize(n1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"    z1.resize(n1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   72","line":"    std::vector<GroupElement> S1, T1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   73","line":"    S1.resize(n1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"    T1.resize(n1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   75","line":"    for (std::size_t i = 0; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   76","line":"        x1[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   77","line":"        y1[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   78","line":"        z1[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"        S1[i] = F1*x1[i] + G1*y1[i] + H1*z1[i];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   81","line":"        T1[i] = (U1 + G1*y1[i].negate())*x1[i].inverse();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   82","line":"    }"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"    spark::ChaumProof proof1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   85","line":"    spark::Chaum chaum1(F1, G1, H1, U1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":"    chaum1.prove(mu1, x1, y1, z1, S1, T1, proof1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    assert(chaum1.verify(mu1, S1, T1, proof1));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"    /** Full all the things again**/"},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"    GroupElement F3, G3, H3, U3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   93","line":"    F3 = fsp.GetMemberGroupElement();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   94","line":"    G3 = fsp.GetMemberGroupElement();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   95","line":"    H3 = fsp.GetMemberGroupElement();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   96","line":"    U3 = fsp.GetMemberGroupElement();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   97","line":"    //F3.randomize();"},
{"lineNum":"   98","line":"    //G3.randomize();"},
{"lineNum":"   99","line":"    //H3.randomize();"},
{"lineNum":"  100","line":"    //U3.randomize();"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"    Scalar mu3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  104","line":"    mu3 = fsp.GetScalar();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  105","line":"    std::vector<Scalar> x3, y3, z3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  106","line":"    x3.resize(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  107","line":"    x3 = fsp.GetScalarsVector(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":"    y3.resize(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  109","line":"    y3 = fsp.GetScalarsVector(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  110","line":"    z3.resize(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":"    z3 = fsp.GetScalarsVector(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"    std::vector<GroupElement> S3, T3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  114","line":"    S3.resize(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  115","line":"    T3.resize(n);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":"    for (size_t i=0; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  117","line":"        S3[i] = F3*x3[i] + G3*y3[i] + H3*z3[i];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  118","line":"        T3[i] = (U3 + G3*y3[i].negate())*x3[i].inverse();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  119","line":"    }"},
{"lineNum":"  120","line":""},
{"lineNum":"  121","line":"    spark::ChaumProof proof3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"    spark::Chaum chaum3(F3, G3, H3, U3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"    chaum3.prove(mu3, x3, y3, z3, S3, T3, proof3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  125","line":"    assert(chaum3.verify(mu3, S3, T3, proof3));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"    /** End of completeness tests**/"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    /* Fuzzing for bad proofs*/"},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"    // Bad mu"},
{"lineNum":"  132","line":"    Scalar evil_mu;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  133","line":"    evil_mu.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  134","line":"    assert(!(chaum3.verify(evil_mu, S3, T3, proof3)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"    // Bad S"},
{"lineNum":"  137","line":"    for (std::size_t i = 0; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  138","line":"        std::vector<GroupElement> evil_S(S3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  139","line":"        evil_S[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  140","line":"        assert(!(chaum3.verify(mu3, evil_S, T3, proof3)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  141","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"    // Bad T"},
{"lineNum":"  144","line":"    for (std::size_t i = 0; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  145","line":"        std::vector<GroupElement> evil_T(T3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  146","line":"        evil_T[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  147","line":"        assert(!(chaum3.verify(mu3, S3, evil_T, proof3)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  148","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"    // Bad A1"},
{"lineNum":"  151","line":"    spark::ChaumProof evil_proof = proof3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  152","line":"    evil_proof.A1.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  153","line":"    assert(!(chaum3.verify(mu3, S3, T3, evil_proof)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"    // Bad A2"},
{"lineNum":"  156","line":"    for (std::size_t i = 0; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  157","line":"        evil_proof = proof3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  158","line":"        evil_proof.A2[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  159","line":"        assert(!(chaum3.verify(mu3, S3, T3, evil_proof)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  160","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"    // Bad t1"},
{"lineNum":"  163","line":"    for (std::size_t i = 0; i < n; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  164","line":"        evil_proof = proof3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  165","line":"        evil_proof.t1[i].randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  166","line":"        assert(!(chaum3.verify(mu3, S3, T3, evil_proof)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  167","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"    // Bad t2"},
{"lineNum":"  170","line":"    evil_proof = proof3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  171","line":"    evil_proof.t2.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  172","line":"    assert(!(chaum3.verify(mu3, S3, T3, evil_proof)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"    // Bad t3"},
{"lineNum":"  175","line":"    evil_proof = proof3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  176","line":"    evil_proof.t3.randomize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  177","line":"    assert(!(chaum3.verify(mu3, S3, T3, evil_proof)));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"    return 0;"},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"}","class":"lineNoCov","hits":"0","possible_hits":"19",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "chaum_fuzz_debug", "date" : "2023-08-24 13:00:08", "instrumented" : 120, "covered" : 17,};
var merged_data = [];
