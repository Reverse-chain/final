var data = {lines:[
{"lineNum":"    1","line":"#include \"../fuzzing_utilities.h\""},
{"lineNum":"    2","line":"#include \"../FuzzedDataProvider.h\""},
{"lineNum":"    3","line":"#include \"../../libspark/bpplus.h\""},
{"lineNum":"    4","line":"#include \"../../libspark/bpplus_proof.h\""},
{"lineNum":"    5","line":"#include <cassert>"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"extern \"C\" int LLVMFuzzerTestOneInput(uint8_t *buf, size_t len) {","class":"lineCov","hits":"1","order":"1462",},
{"lineNum":"    9","line":"    FuzzedDataProvider fdp(buf, len);","class":"lineCov","hits":"1","order":"1467",},
{"lineNum":"   10","line":"    FuzzedSecp256k1Object fsp(&fdp);","class":"lineCov","hits":"1","order":"1470",},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"    /** Single Proof **/"},
{"lineNum":"   13","line":"    size_t N0 = fdp.ConsumeIntegralInRange<size_t>(0,64);","class":"lineCov","hits":"1","order":"1475",},
{"lineNum":"   14","line":"    size_t M0 = fdp.ConsumeIntegral<size_t>();","class":"lineCov","hits":"1","order":"1477",},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"    N0 = 64;","class":"lineCov","hits":"1","order":"1479",},
{"lineNum":"   17","line":"    M0 = 4;","class":"lineCov","hits":"1","order":"1481",},
{"lineNum":"   18","line":"    // Generators"},
{"lineNum":"   19","line":"    GroupElement G0, H0;","class":"lineCov","hits":"1","order":"1483",},
{"lineNum":"   20","line":"    G0.randomize();","class":"lineCov","hits":"1","order":"1484",},
{"lineNum":"   21","line":"    H0.randomize();","class":"lineCov","hits":"1","order":"1464",},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"    std::vector<GroupElement> Gi0, Hi0;","class":"lineCov","hits":"1","order":"1472",},
{"lineNum":"   24","line":"    size_t generators_needed = N0*M0;","class":"lineCov","hits":"1","order":"1486",},
{"lineNum":"   25","line":"    if (!spark::is_nonzero_power_of_2(generators_needed)) {","class":"lineCov","hits":"1","order":"1489",},
{"lineNum":"   26","line":"        generators_needed = 1 << (spark::log2(N0*M0) + 1);","class":"lineNoCov","hits":"0",},
{"lineNum":"   27","line":"    }","class":"lineNoCov","hits":"0",},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"    Gi0.resize(generators_needed);","class":"lineCov","hits":"1","order":"1458",},
{"lineNum":"   30","line":"    Hi0.resize(generators_needed);","class":"lineCov","hits":"1","order":"1456",},
{"lineNum":"   31","line":"    for (size_t i=0; i < generators_needed; i++) {","class":"lineCov","hits":"1","order":"1454",},
{"lineNum":"   32","line":"        Gi0[i].randomize();","class":"lineCov","hits":"1","order":"1453",},
{"lineNum":"   33","line":"        Hi0[i].randomize();","class":"lineCov","hits":"1","order":"1452",},
{"lineNum":"   34","line":"    }","class":"lineCov","hits":"1","order":"1451",},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    // Commitments"},
{"lineNum":"   37","line":"    std::vector<Scalar> v, r;","class":"lineCov","hits":"1","order":"1461",},
{"lineNum":"   38","line":"    v.resize(M0);","class":"lineCov","hits":"1","order":"1466",},
{"lineNum":"   39","line":"    r.resize(M0);","class":"lineCov","hits":"1","order":"1469",},
{"lineNum":"   40","line":"    // v = fsp.GetScalars(M0);"},
{"lineNum":"   41","line":"    // r = fsp.GetScalars(M0);"},
{"lineNum":"   42","line":"    for(int i = 0; i < M0; i++){","class":"lineCov","hits":"1","order":"1474",},
{"lineNum":"   43","line":"        v[i] = Scalar((uint64_t) rand());","class":"lineCov","hits":"1","order":"1476",},
{"lineNum":"   44","line":"        r[i].randomize();","class":"lineCov","hits":"1","order":"1450",},
{"lineNum":"   45","line":"    }","class":"lineCov","hits":"1","order":"1478",},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    std::vector<GroupElement> C0;","class":"lineCov","hits":"1","order":"1491",},
{"lineNum":"   48","line":"    C0.resize(M0);","class":"lineCov","hits":"1","order":"1492",},
{"lineNum":"   49","line":"    for (size_t i=0; i < M0; i++) {","class":"lineCov","hits":"1","order":"1493",},
{"lineNum":"   50","line":"        C0[i] = G0*v[i] + H0*r[i];","class":"lineCov","hits":"1","order":"1494",},
{"lineNum":"   51","line":"    }"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"    spark::BPPlus bpplus0(G0, H0, Gi0, Hi0, N0);","class":"lineCov","hits":"1","order":"1488",},
{"lineNum":"   54","line":"    spark::BPPlusProof proof0;","class":"lineCov","hits":"1","order":"1495",},
{"lineNum":"   55","line":"    bpplus0.prove(v, r, C0, proof0);","class":"lineCov","hits":"1","order":"1496",},
{"lineNum":"   56","line":"    assert(bpplus0.verify(C0, proof0));","class":"lineCov","hits":"1","order":"1497",},
{"lineNum":"   57","line":"    /** End of Single proof fuzz test**/"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"    /** Batch Proof **/"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"    size_t N1 = fdp.ConsumeIntegralInRange<size_t>(1,64);","class":"lineCov","hits":"1","order":"1498",},
{"lineNum":"   62","line":"    size_t B = fdp.ConsumeIntegral<size_t>();","class":"lineCov","hits":"1","order":"1499",},
{"lineNum":"   63","line":"    N1 = 64;","class":"lineCov","hits":"1","order":"1500",},
{"lineNum":"   64","line":"    B = 5;","class":"lineCov","hits":"1","order":"1501",},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"    std::vector<std::size_t> sizes;","class":"lineCov","hits":"1","order":"1502",},
{"lineNum":"   67","line":"    sizes.resize(B);","class":"lineCov","hits":"1","order":"1463",},
{"lineNum":"   68","line":"    for(int i = 0; i < B; i++){","class":"lineCov","hits":"1","order":"1468",},
{"lineNum":"   69","line":"        sizes[i] = (fdp.ConsumeIntegral<std::size_t>() % 8) + 1 ; // otherwise it\'s \"Bad BPPlus statement!4\" line 102 bpplus.cpp since B = 5.(checked)","class":"lineCov","hits":"1","order":"1471",},
{"lineNum":"   70","line":"    }"},
{"lineNum":"   71","line":"    // sizes = fdp.ConsumeRemainingBytes<std::size_t>();"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"    // Generators"},
{"lineNum":"   74","line":"    GroupElement G1, H1;","class":"lineCov","hits":"1","order":"1503",},
{"lineNum":"   75","line":"    G1.randomize();","class":"lineCov","hits":"1","order":"1480",},
{"lineNum":"   76","line":"    H1.randomize();","class":"lineCov","hits":"1","order":"1482",},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"    // std::size_t next_power = 1 << (uint(log2(B)) + 1);"},
{"lineNum":"   79","line":"    std::vector<GroupElement> Gi1, Hi1;","class":"lineCov","hits":"1","order":"1485",},
{"lineNum":"   80","line":"    Gi1.resize(8*N1);","class":"lineCov","hits":"1","order":"1465",},
{"lineNum":"   81","line":"    Hi1.resize(8*N1);","class":"lineCov","hits":"1","order":"1504",},
{"lineNum":"   82","line":"    for (size_t i=0; i < 8*N1; i++) {","class":"lineCov","hits":"1","order":"1473",},
{"lineNum":"   83","line":"        Hi1[i].randomize();","class":"lineCov","hits":"1","order":"1487",},
{"lineNum":"   84","line":"        Gi1[i].randomize();","class":"lineCov","hits":"1","order":"1490",},
{"lineNum":"   85","line":"    }","class":"lineCov","hits":"1","order":"1460",},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"    spark::BPPlus bpplus1(G1, H1, Gi1, Hi1, N1);","class":"lineCov","hits":"1","order":"1505",},
{"lineNum":"   88","line":"    std::vector<spark::BPPlusProof> proofs;","class":"lineCov","hits":"1","order":"1459",},
{"lineNum":"   89","line":"    proofs.resize(B);","class":"lineCov","hits":"1","order":"1457",},
{"lineNum":"   90","line":"    std::vector<std::vector<GroupElement>> C1;","class":"lineCov","hits":"1","order":"1455",},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"    for (size_t i=0; i < B; i++) {","class":"lineCov","hits":"1","order":"1449",},
{"lineNum":"   93","line":"        std::size_t M = sizes[i];","class":"lineCov","hits":"1","order":"1448",},
{"lineNum":"   94","line":"        std::vector<Scalar> v, r;","class":"lineCov","hits":"1","order":"1447",},
{"lineNum":"   95","line":"        v.resize(M);","class":"lineCov","hits":"1","order":"1446",},
{"lineNum":"   96","line":"        r.resize(M);","class":"lineCov","hits":"1","order":"1445",},
{"lineNum":"   97","line":"        std::vector<GroupElement> C_;","class":"lineCov","hits":"1","order":"1444",},
{"lineNum":"   98","line":"        C_.resize(M);","class":"lineCov","hits":"1","order":"1443",},
{"lineNum":"   99","line":"        for (size_t j=0; j < M; j++) {","class":"lineCov","hits":"1","order":"1442",},
{"lineNum":"  100","line":"            v[j] = Scalar(uint64_t(j));","class":"lineCov","hits":"1","order":"1441",},
{"lineNum":"  101","line":"            r[j].randomize();","class":"lineCov","hits":"1","order":"1440",},
{"lineNum":"  102","line":"            C_[j] = G1*v[j] + H1*r[j];","class":"lineCov","hits":"1","order":"1439",},
{"lineNum":"  103","line":"        }"},
{"lineNum":"  104","line":"        C1.emplace_back(C_);","class":"lineCov","hits":"1","order":"1438",},
{"lineNum":"  105","line":"        bpplus1.prove(v, r, C_, proofs[i]);","class":"lineCov","hits":"1","order":"1437",},
{"lineNum":"  106","line":"    }","class":"lineCov","hits":"1","order":"1436",},
{"lineNum":"  107","line":"    assert(bpplus1.verify(C1, proofs));","class":"lineCov","hits":"1","order":"1435",},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"    /** End of Batch proof fuzz test **/"},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"    return 0;"},
{"lineNum":"  112","line":"}","class":"lineNoCov","hits":"0",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "", "date" : "2023-08-25 16:09:03", "instrumented" : 74, "covered" : 71,};
var merged_data = [];
