var data = {lines:[
{"lineNum":"    1","line":"#include \"../../include/GroupElement.h\""},
{"lineNum":"    2","line":"#include \"../../include/secp256k1.h\""},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include \"../field.h\""},
{"lineNum":"    5","line":"#include \"../field_impl.h\""},
{"lineNum":"    6","line":"#include \"../group.h\""},
{"lineNum":"    7","line":"#include \"../group_impl.h\""},
{"lineNum":"    8","line":"#include \"../hash.h\""},
{"lineNum":"    9","line":"#include \"../hash_impl.h\""},
{"lineNum":"   10","line":"#include \"../scalar.h\""},
{"lineNum":"   11","line":"#include \"../scalar_impl.h\""},
{"lineNum":"   12","line":"#include \"../ecmult.h\""},
{"lineNum":"   13","line":"#include \"../ecmult_impl.h\""},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"#include <openssl/rand.h>"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"#include <array>"},
{"lineNum":"   18","line":"#include <sstream>"},
{"lineNum":"   19","line":"#include <stdexcept>"},
{"lineNum":"   20","line":"#include <string>"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"#include <stdlib.h>"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"static secp256k1_ecmult_context ctx;"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"// Converts the value from secp256k1_gej to secp256k1_ge and returns."},
{"lineNum":"   27","line":"static secp256k1_ge gej_to_ge(const secp256k1_gej &gej)"},
{"lineNum":"   28","line":"{","class":"lineCov","hits":"2","order":"670","possible_hits":"2",},
{"lineNum":"   29","line":"    secp256k1_ge ge;"},
{"lineNum":"   30","line":"    secp256k1_gej j(gej);","class":"lineCov","hits":"1","order":"671","possible_hits":"1",},
{"lineNum":"   31","line":"    secp256k1_ge_set_gej(&ge, &j);","class":"lineCov","hits":"1","order":"672","possible_hits":"1",},
{"lineNum":"   32","line":"    return ge;","class":"linePartCov","hits":"1","order":"673","possible_hits":"2",},
{"lineNum":"   33","line":"}"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"//\tImplements the algorithm from:"},
{"lineNum":"   36","line":"//   Indifferentiable Hashing to Barreto-Naehrig Curves"},
{"lineNum":"   37","line":"//    Pierre-Alain Fouque and Mehdi Tibouchi"},
{"lineNum":"   38","line":"//    Latincrypt 2012"},
{"lineNum":"   39","line":"//"},
{"lineNum":"   40","line":"static void indifferent_hash(secp256k1_ge* ge, const secp256k1_fe* t)"},
{"lineNum":"   41","line":"{","class":"lineCov","hits":"2","order":"315","possible_hits":"2",},
{"lineNum":"   42","line":"    static const secp256k1_fe c = SECP256K1_FE_CONST(0x0a2d2ba9, 0x3507f1df, 0x233770c2, 0xa797962c, 0xc61f6d15, 0xda14ecd4, 0x7d8d27ae, 0x1cd5f852);"},
{"lineNum":"   43","line":"    static const secp256k1_fe d = SECP256K1_FE_CONST(0x851695d4, 0x9a83f8ef, 0x919bb861, 0x53cbcb16, 0x630fb68a, 0xed0a766a, 0x3ec693d6, 0x8e6afa40);"},
{"lineNum":"   44","line":"    static const secp256k1_fe b = SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 7);"},
{"lineNum":"   45","line":"    static const secp256k1_fe b_plus_one = SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 8);"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    secp256k1_fe wn, wd, x1n, x2n, x3n, x3d, jinv, tmp, x1, x2, x3, alphain, betain, gammain, y1, y2, y3;"},
{"lineNum":"   48","line":"    int alphaquad, betaquad;"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"    secp256k1_fe_mul(&wn, &c, t); /* mag 1 */","class":"lineCov","hits":"1","order":"316","possible_hits":"1",},
{"lineNum":"   51","line":"    secp256k1_fe_sqr(&wd, t); /* mag 1 */","class":"lineCov","hits":"1","order":"324","possible_hits":"1",},
{"lineNum":"   52","line":"    secp256k1_fe_add(&wd, &b_plus_one); /* mag 2 */","class":"lineCov","hits":"1","order":"332","possible_hits":"1",},
{"lineNum":"   53","line":"    secp256k1_fe_mul(&tmp, t, &wn); /* mag 1 */","class":"lineCov","hits":"1","order":"340","possible_hits":"1",},
{"lineNum":"   54","line":"    secp256k1_fe_negate(&tmp, &tmp, 1); /* mag 2 */","class":"lineCov","hits":"1","order":"341","possible_hits":"1",},
{"lineNum":"   55","line":"    secp256k1_fe_mul(&x1n, &d, &wd); /* mag 1 */","class":"lineCov","hits":"1","order":"349","possible_hits":"1",},
{"lineNum":"   56","line":"    secp256k1_fe_add(&x1n, &tmp); /* mag 3 */","class":"lineCov","hits":"1","order":"350","possible_hits":"1",},
{"lineNum":"   57","line":"    x2n = x1n; /* mag 3 */","class":"lineCov","hits":"1","order":"351","possible_hits":"1",},
{"lineNum":"   58","line":"    secp256k1_fe_add(&x2n, &wd); /* mag 5 */","class":"lineCov","hits":"1","order":"352","possible_hits":"1",},
{"lineNum":"   59","line":"    secp256k1_fe_negate(&x2n, &x2n, 5); /* mag 6 */","class":"lineCov","hits":"1","order":"353","possible_hits":"1",},
{"lineNum":"   60","line":"    secp256k1_fe_mul(&x3d, &c, t); /* mag 1 */","class":"lineCov","hits":"1","order":"354","possible_hits":"1",},
{"lineNum":"   61","line":"    secp256k1_fe_sqr(&x3d, &x3d); /* mag 1 */","class":"lineCov","hits":"1","order":"355","possible_hits":"1",},
{"lineNum":"   62","line":"    secp256k1_fe_sqr(&x3n, &wd); /* mag 1 */","class":"lineCov","hits":"1","order":"356","possible_hits":"1",},
{"lineNum":"   63","line":"    secp256k1_fe_add(&x3n, &x3d); /* mag 2 */","class":"lineCov","hits":"1","order":"357","possible_hits":"1",},
{"lineNum":"   64","line":"    secp256k1_fe_mul(&jinv, &x3d, &wd); /* mag 1 */","class":"lineCov","hits":"1","order":"358","possible_hits":"1",},
{"lineNum":"   65","line":"    secp256k1_fe_inv(&jinv, &jinv); /* mag 1 */","class":"lineCov","hits":"1","order":"359","possible_hits":"1",},
{"lineNum":"   66","line":"    secp256k1_fe_mul(&x1, &x1n, &x3d); /* mag 1 */","class":"lineCov","hits":"1","order":"415","possible_hits":"1",},
{"lineNum":"   67","line":"    secp256k1_fe_mul(&x1, &x1, &jinv); /* mag 1 */","class":"lineCov","hits":"1","order":"416","possible_hits":"1",},
{"lineNum":"   68","line":"    secp256k1_fe_mul(&x2, &x2n, &x3d); /* mag 1 */","class":"lineCov","hits":"1","order":"417","possible_hits":"1",},
{"lineNum":"   69","line":"    secp256k1_fe_mul(&x2, &x2, &jinv); /* mag 1 */","class":"lineCov","hits":"1","order":"418","possible_hits":"1",},
{"lineNum":"   70","line":"    secp256k1_fe_mul(&x3, &x3n, &wd); /* mag 1 */","class":"lineCov","hits":"1","order":"419","possible_hits":"1",},
{"lineNum":"   71","line":"    secp256k1_fe_mul(&x3, &x3, &jinv); /* mag 1 */","class":"lineCov","hits":"1","order":"420","possible_hits":"1",},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"    secp256k1_fe_sqr(&alphain, &x1); /* mag 1 */","class":"lineCov","hits":"1","order":"421","possible_hits":"1",},
{"lineNum":"   74","line":"    secp256k1_fe_mul(&alphain, &alphain, &x1); /* mag 1 */","class":"lineCov","hits":"1","order":"422","possible_hits":"1",},
{"lineNum":"   75","line":"    secp256k1_fe_add(&alphain, &b); /* mag 2 */","class":"lineCov","hits":"1","order":"423","possible_hits":"1",},
{"lineNum":"   76","line":"    secp256k1_fe_sqr(&betain, &x2); /* mag 1 */","class":"lineCov","hits":"1","order":"424","possible_hits":"1",},
{"lineNum":"   77","line":"    secp256k1_fe_mul(&betain, &betain, &x2); /* mag 1 */","class":"lineCov","hits":"1","order":"425","possible_hits":"1",},
{"lineNum":"   78","line":"    secp256k1_fe_add(&betain, &b); /* mag 2 */","class":"lineCov","hits":"1","order":"426","possible_hits":"1",},
{"lineNum":"   79","line":"    secp256k1_fe_sqr(&gammain, &x3); /* mag 1 */","class":"lineCov","hits":"1","order":"427","possible_hits":"1",},
{"lineNum":"   80","line":"    secp256k1_fe_mul(&gammain, &gammain, &x3); /* mag 1 */","class":"lineCov","hits":"1","order":"428","possible_hits":"1",},
{"lineNum":"   81","line":"    secp256k1_fe_add(&gammain, &b); /* mag 2 */","class":"lineCov","hits":"1","order":"429","possible_hits":"1",},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"    alphaquad = secp256k1_fe_sqrt(&y1, &alphain);","class":"lineCov","hits":"1","order":"430","possible_hits":"1",},
{"lineNum":"   84","line":"    betaquad = secp256k1_fe_sqrt(&y2, &betain);","class":"lineCov","hits":"1","order":"498","possible_hits":"1",},
{"lineNum":"   85","line":"    secp256k1_fe_sqrt(&y3, &gammain);","class":"lineCov","hits":"1","order":"499","possible_hits":"1",},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"    secp256k1_fe_cmov(&x1, &x2, (!alphaquad) & betaquad);","class":"lineCov","hits":"1","order":"500","possible_hits":"1",},
{"lineNum":"   88","line":"    secp256k1_fe_cmov(&y1, &y2, (!alphaquad) & betaquad);","class":"lineCov","hits":"1","order":"510","possible_hits":"1",},
{"lineNum":"   89","line":"    secp256k1_fe_cmov(&x1, &x3, (!alphaquad) & !betaquad);","class":"lineCov","hits":"1","order":"511","possible_hits":"1",},
{"lineNum":"   90","line":"    secp256k1_fe_cmov(&y1, &y3, (!alphaquad) & !betaquad);","class":"lineCov","hits":"1","order":"512","possible_hits":"1",},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"    secp256k1_ge_set_xy(ge, &x1, &y1);","class":"lineCov","hits":"1","order":"513","possible_hits":"1",},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"    /* The linked algorithm from the paper uses the Jacobi symbol of t to"},
{"lineNum":"   95","line":"     * determine the Jacobi symbol of the produced y coordinate. Since the"},
{"lineNum":"   96","line":"     * rest of the algorithm only uses t^2, we can safely use another criterion"},
{"lineNum":"   97","line":"     * as long as negation of t results in negation of the y coordinate. Here"},
{"lineNum":"   98","line":"     * we choose to use t\'s oddness, as it is faster to determine. */"},
{"lineNum":"   99","line":"    secp256k1_fe_negate(&tmp, &ge->y, 1);","class":"lineCov","hits":"1","order":"519","possible_hits":"1",},
{"lineNum":"  100","line":"    secp256k1_fe_cmov(&ge->y, &tmp, secp256k1_fe_is_odd(t));","class":"lineCov","hits":"1","order":"520","possible_hits":"1",},
{"lineNum":"  101","line":"}","class":"linePartCov","hits":"1","order":"523","possible_hits":"2",},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"namespace secp_primitives {"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"template<class Value, class Iter, std::size_t Len>"},
{"lineNum":"  106","line":"static int _convertBase("},
{"lineNum":"  107","line":"    Iter begin,"},
{"lineNum":"  108","line":"    Iter end,"},
{"lineNum":"  109","line":"    int from,"},
{"lineNum":"  110","line":"    Value(&dst)[Len],"},
{"lineNum":"  111","line":"    int to)"},
{"lineNum":"  112","line":"{","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  113","line":"    memset(dst, 0, sizeof(Value) * Len);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"    int resLen = 0;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  116","line":"    for (auto iter = begin; iter != end; iter++) {","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  117","line":"        int carry = *iter;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"        for (int i = 0; i < resLen || carry != 0; i++) {","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  120","line":"            if (i == resLen) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  121","line":"                resLen++;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  122","line":"            }"},
{"lineNum":"  123","line":""},
{"lineNum":"  124","line":"            if (resLen > Len) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  125","line":"                throw std::overflow_error(\"GroupElement::GroupElement: invalid count\");","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  126","line":"            }"},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"            int sum = carry + from * dst[i];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  129","line":"            dst[i] = sum % to;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  130","line":"            carry = sum / to;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  131","line":"        }"},
{"lineNum":"  132","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"    for (int i = 0; i < Len / 2; i++) {","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  135","line":"        unsigned char tmp = dst[i];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  136","line":"        dst[i] = dst[Len - i - 1];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  137","line":"        dst[Len - i - 1] = tmp;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  138","line":"    }"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"    return resLen;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  141","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"template<int Len>"},
{"lineNum":"  144","line":"static void _negate (uint8_t(&num) [Len])"},
{"lineNum":"  145","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  146","line":"    for (uint8_t& v : num) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  147","line":"        v ^= 0xFF;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  148","line":"    }"},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"    int carry = 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  151","line":"    for (int i = Len - 1; i >= 0 && carry > 0; i--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  152","line":"        auto sum = carry + num[i];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  153","line":"        num[i] = sum % 256;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  154","line":"        carry = sum / 256;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  155","line":"    }"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"    if (carry != 0) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  158","line":"        throw std::overflow_error(\"GroupElement::GroupElement: overflow while negate\");","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  159","line":"    }"},
{"lineNum":"  160","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"GroupElement::GroupElement()"},
{"lineNum":"  163","line":"        : g_(new secp256k1_gej())","class":"lineCov","hits":"1","order":"166","possible_hits":"1",},
{"lineNum":"  164","line":"{","class":"lineCov","hits":"2","order":"165","possible_hits":"2",},
{"lineNum":"  165","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineCov","hits":"1","order":"167","possible_hits":"1",},
{"lineNum":"  166","line":"    secp256k1_gej_clear(g);","class":"lineCov","hits":"1","order":"168","possible_hits":"1",},
{"lineNum":"  167","line":"    g->infinity = 1;","class":"lineCov","hits":"1","order":"179","possible_hits":"1",},
{"lineNum":"  168","line":"}","class":"linePartCov","hits":"1","order":"180","possible_hits":"2",},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"GroupElement::GroupElement(const GroupElement& other)"},
{"lineNum":"  171","line":"        : g_(new secp256k1_gej(*reinterpret_cast<secp256k1_gej *>(other.g_)))","class":"lineCov","hits":"1","order":"1048","possible_hits":"1",},
{"lineNum":"  172","line":"{","class":"lineCov","hits":"2","order":"1047","possible_hits":"2",},
{"lineNum":"  173","line":"}","class":"linePartCov","hits":"1","order":"1049","possible_hits":"2",},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"GroupElement::GroupElement(const void *g)"},
{"lineNum":"  176","line":"        : g_(new secp256k1_gej(*reinterpret_cast<const secp256k1_gej *>(g)))","class":"lineCov","hits":"1","order":"991","possible_hits":"1",},
{"lineNum":"  177","line":"{","class":"lineCov","hits":"2","order":"990","possible_hits":"2",},
{"lineNum":"  178","line":"}","class":"linePartCov","hits":"1","order":"992","possible_hits":"2",},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"static void _convertToFieldElement(secp256k1_fe *r, const char* str, int base) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  181","line":"    uint8_t buffer[32];"},
{"lineNum":"  182","line":"    auto negative = *str == \'-\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  183","line":"    if (negative) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  184","line":"        str++;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  185","line":"    }"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"    auto strLen = strlen(str);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  188","line":"    std::vector<uint8_t> src(strLen, 0);","class":"linePartCov","hits":"1","order":"525","possible_hits":"4",},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"    for (int i = 0; i < strLen; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  191","line":"        char ch = str[i];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"        switch (base) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  194","line":"        case 10:"},
{"lineNum":"  195","line":"            if (ch >= \'0\' && ch <= \'9\') {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  196","line":"                src[i] = ch - \'0\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  197","line":"            } else {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  198","line":"                throw std::invalid_argument(\"invalid number base 10\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  199","line":"            }"},
{"lineNum":"  200","line":"            break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"        case 16:"},
{"lineNum":"  203","line":"            if (ch >= \'0\' && ch <= \'9\') {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  204","line":"                src[i] = ch - \'0\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  205","line":"            } else if (ch >= \'a\' && ch <= \'f\') {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  206","line":"                src[i] = 10 + ch - \'a\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  207","line":"            } else if (ch >= \'A\' && ch <= \'F\') {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  208","line":"                src[i] = 10 + ch - \'A\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  209","line":"            } else {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  210","line":"                throw std::invalid_argument(\"invalid number base 16\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  211","line":"            }"},
{"lineNum":"  212","line":"            break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  213","line":""},
{"lineNum":"  214","line":"        default:"},
{"lineNum":"  215","line":"            break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  216","line":"        }"},
{"lineNum":"  217","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"    _convertBase(src.begin(), src.end(), base, buffer, 256);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  220","line":"    if (negative) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  221","line":"        _negate(buffer);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  222","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"    secp256k1_fe_set_b32(r, buffer);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  225","line":"}","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"GroupElement::GroupElement(const char* x,const char* y, int base)"},
{"lineNum":"  228","line":"        : g_(new secp256k1_gej())","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  229","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  230","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  231","line":""},
{"lineNum":"  232","line":"    secp256k1_gej_clear(g);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  233","line":"    secp256k1_ge element;"},
{"lineNum":"  234","line":"    _convertToFieldElement(&element.x,x,base);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  235","line":"    _convertToFieldElement(&element.y,y,base);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  236","line":"    element.infinity = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  237","line":"    secp256k1_gej_set_ge(g,&element);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  238","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":"GroupElement::~GroupElement()"},
{"lineNum":"  241","line":"{","class":"lineCov","hits":"2","order":"1028","possible_hits":"2",},
{"lineNum":"  242","line":"    delete reinterpret_cast<secp256k1_gej *>(g_);","class":"lineCov","hits":"1","order":"1029","possible_hits":"1",},
{"lineNum":"  243","line":"}","class":"linePartCov","hits":"1","order":"1030","possible_hits":"2",},
{"lineNum":"  244","line":""},
{"lineNum":"  245","line":"GroupElement& GroupElement::operator=(const GroupElement &other)"},
{"lineNum":"  246","line":"{","class":"lineCov","hits":"2","order":"1023","possible_hits":"2",},
{"lineNum":"  247","line":"    return set(other);","class":"lineCov","hits":"1","order":"1024","possible_hits":"1",},
{"lineNum":"  248","line":"}"},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":"GroupElement& GroupElement::set(const GroupElement &other)"},
{"lineNum":"  251","line":"{","class":"lineCov","hits":"2","order":"1025","possible_hits":"2",},
{"lineNum":"  252","line":"    *reinterpret_cast<secp256k1_gej *>(g_) = *reinterpret_cast<secp256k1_gej *>(other.g_);","class":"lineCov","hits":"1","order":"1026","possible_hits":"1",},
{"lineNum":"  253","line":"    return *this;","class":"linePartCov","hits":"1","order":"1027","possible_hits":"2",},
{"lineNum":"  254","line":"}"},
{"lineNum":"  255","line":""},
{"lineNum":"  256","line":"GroupElement GroupElement::operator*(const Scalar& multiplier) const"},
{"lineNum":"  257","line":"{","class":"lineCov","hits":"2","order":"809","possible_hits":"2",},
{"lineNum":"  258","line":"    secp256k1_gej result;"},
{"lineNum":"  259","line":"    secp256k1_scalar ng;"},
{"lineNum":"  260","line":"    secp256k1_scalar_set_int(&ng,0);","class":"lineCov","hits":"1","order":"810","possible_hits":"1",},
{"lineNum":"  261","line":"    secp256k1_ecmult(&ctx,&result,reinterpret_cast<secp256k1_gej *>(g_), reinterpret_cast<const secp256k1_scalar *>(multiplier.get_value()),&ng);","class":"lineCov","hits":"1","order":"811","possible_hits":"1",},
{"lineNum":"  262","line":"    return &result;","class":"lineCov","hits":"1","order":"989","possible_hits":"1",},
{"lineNum":"  263","line":"}"},
{"lineNum":"  264","line":""},
{"lineNum":"  265","line":"GroupElement& GroupElement::operator*=(const Scalar& multiplier)"},
{"lineNum":"  266","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  267","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  268","line":"    secp256k1_scalar ng;"},
{"lineNum":"  269","line":"    secp256k1_scalar_set_int(&ng,0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  270","line":"    secp256k1_ecmult(&ctx,g,g, reinterpret_cast<const secp256k1_scalar *>(multiplier.get_value()),&ng);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  271","line":"    return *this;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  272","line":"}"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"GroupElement GroupElement::operator+(const GroupElement &other) const"},
{"lineNum":"  275","line":"{","class":"lineCov","hits":"2","order":"995","possible_hits":"2",},
{"lineNum":"  276","line":"    secp256k1_gej result_gej;"},
{"lineNum":"  277","line":"    secp256k1_gej_add_var(&result_gej, reinterpret_cast<secp256k1_gej *>(g_), reinterpret_cast<secp256k1_gej *>(other.g_), NULL);","class":"lineCov","hits":"1","order":"996","possible_hits":"1",},
{"lineNum":"  278","line":"    return &result_gej;","class":"lineCov","hits":"1","order":"1022","possible_hits":"1",},
{"lineNum":"  279","line":"}"},
{"lineNum":"  280","line":""},
{"lineNum":"  281","line":"GroupElement& GroupElement::operator+=(const GroupElement& other)"},
{"lineNum":"  282","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  283","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  284","line":"    secp256k1_gej_add_var(g, g, reinterpret_cast<secp256k1_gej *>(other.g_), NULL);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  285","line":"    return *this;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  286","line":"}"},
{"lineNum":"  287","line":""},
{"lineNum":"  288","line":"GroupElement GroupElement::inverse() const"},
{"lineNum":"  289","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  290","line":"    secp256k1_gej result_gej;"},
{"lineNum":"  291","line":"    secp256k1_gej_neg(&result_gej,reinterpret_cast<secp256k1_gej *>(g_));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  292","line":"    return &result_gej;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  293","line":"}"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"void GroupElement::square()"},
{"lineNum":"  296","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  297","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  298","line":"    secp256k1_gej_double_var(g, g, NULL);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  299","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  300","line":""},
{"lineNum":"  301","line":"bool GroupElement::operator==(const  GroupElement& other) const"},
{"lineNum":"  302","line":"{","class":"lineCov","hits":"2","order":"1196","possible_hits":"2",},
{"lineNum":"  303","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineCov","hits":"1","order":"1197","possible_hits":"1",},
{"lineNum":"  304","line":"    auto og = reinterpret_cast<secp256k1_gej *>(other.g_);","class":"lineCov","hits":"1","order":"1198","possible_hits":"1",},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"    if(g->infinity && og->infinity)","class":"lineCov","hits":"1","order":"1199","possible_hits":"1",},
{"lineNum":"  307","line":"        return true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  308","line":"    if(g->infinity != og->infinity)","class":"lineCov","hits":"1","order":"1200","possible_hits":"1",},
{"lineNum":"  309","line":"        return false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  310","line":"    secp256k1_ge this_ge = gej_to_ge(*g);","class":"lineCov","hits":"1","order":"1201","possible_hits":"1",},
{"lineNum":"  311","line":"    secp256k1_ge other_ge = gej_to_ge(*og);","class":"lineCov","hits":"1","order":"1202","possible_hits":"1",},
{"lineNum":"  312","line":"    if(!secp256k1_fe_equal(&this_ge.x, &other_ge.x))","class":"lineCov","hits":"1","order":"1203","possible_hits":"1",},
{"lineNum":"  313","line":"        return false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  314","line":"    if(!secp256k1_fe_equal(&this_ge.y, &other_ge.y))","class":"lineCov","hits":"1","order":"1204","possible_hits":"1",},
{"lineNum":"  315","line":"        return false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  316","line":""},
{"lineNum":"  317","line":"    return true;","class":"lineCov","hits":"1","order":"1205","possible_hits":"1",},
{"lineNum":"  318","line":"}","class":"linePartCov","hits":"1","order":"1206","possible_hits":"2",},
{"lineNum":"  319","line":""},
{"lineNum":"  320","line":"bool GroupElement::operator!=(const  GroupElement& other) const"},
{"lineNum":"  321","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  322","line":"    return !(*this == other);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  323","line":"}"},
{"lineNum":"  324","line":""},
{"lineNum":"  325","line":"bool GroupElement::isMember() const"},
{"lineNum":"  326","line":"{","class":"lineCov","hits":"2","order":"668","possible_hits":"2",},
{"lineNum":"  327","line":"    secp256k1_ge v1 = gej_to_ge(*reinterpret_cast<secp256k1_gej *>(g_));","class":"lineCov","hits":"1","order":"669","possible_hits":"1",},
{"lineNum":"  328","line":"    if (secp256k1_ge_is_infinity(&v1)) {","class":"lineCov","hits":"1","order":"674","possible_hits":"1",},
{"lineNum":"  329","line":"        return true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  330","line":"    }"},
{"lineNum":"  331","line":"    return secp256k1_ge_is_valid_var(&v1);","class":"lineCov","hits":"1","order":"677","possible_hits":"1",},
{"lineNum":"  332","line":"}","class":"linePartCov","hits":"1","order":"711","possible_hits":"2",},
{"lineNum":"  333","line":""},
{"lineNum":"  334","line":"bool GroupElement::isInfinity() const"},
{"lineNum":"  335","line":"{","class":"lineCov","hits":"2","order":"1978","possible_hits":"2",},
{"lineNum":"  336","line":"    return secp256k1_gej_is_infinity(reinterpret_cast<const secp256k1_gej *>(g_));","class":"lineCov","hits":"1","order":"1979","possible_hits":"1",},
{"lineNum":"  337","line":"}"},
{"lineNum":"  338","line":""},
{"lineNum":"  339","line":"void GroupElement::randomize() {","class":"lineCov","hits":"2","order":"182","possible_hits":"2",},
{"lineNum":"  340","line":"    unsigned char temp[32] = { 0 };","class":"lineCov","hits":"1","order":"183","possible_hits":"1",},
{"lineNum":"  341","line":""},
{"lineNum":"  342","line":"    do {"},
{"lineNum":"  343","line":"        if (RAND_bytes(temp, 32) != 1) {","class":"lineCov","hits":"1","order":"184","possible_hits":"1",},
{"lineNum":"  344","line":"            throw \"Unable to generate random GroupElement\";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  345","line":"        }"},
{"lineNum":"  346","line":"        generate(temp);","class":"lineCov","hits":"1","order":"185","possible_hits":"1",},
{"lineNum":"  347","line":"    } while (!(this->isMember()));","class":"lineCov","hits":"1","order":"667","possible_hits":"1",},
{"lineNum":"  348","line":"}","class":"lineCov","hits":"2","order":"186","possible_hits":"2",},
{"lineNum":"  349","line":""},
{"lineNum":"  350","line":"GroupElement& GroupElement::generate(unsigned char* seed){","class":"lineCov","hits":"2","order":"187","possible_hits":"2",},
{"lineNum":"  351","line":"    unsigned char gen[33];"},
{"lineNum":"  352","line":"    static const unsigned char prefix1[16] = \"1st generationn\";"},
{"lineNum":"  353","line":"    static const unsigned char prefix2[16] = \"2nd generationn\";"},
{"lineNum":"  354","line":"    secp256k1_fe t = SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 4);","class":"lineCov","hits":"1","order":"188","possible_hits":"1",},
{"lineNum":"  355","line":"    secp256k1_ge add;"},
{"lineNum":"  356","line":"    secp256k1_gej accum;"},
{"lineNum":"  357","line":"    int overflow;"},
{"lineNum":"  358","line":"    secp256k1_sha256_t sha256;"},
{"lineNum":"  359","line":"    unsigned char b32[32];"},
{"lineNum":"  360","line":"    secp256k1_sha256_initialize(&sha256);","class":"lineCov","hits":"1","order":"189","possible_hits":"1",},
{"lineNum":"  361","line":"    secp256k1_sha256_write(&sha256, prefix1, 16);","class":"lineCov","hits":"1","order":"201","possible_hits":"1",},
{"lineNum":"  362","line":"    secp256k1_sha256_write(&sha256, seed, 32);","class":"lineCov","hits":"1","order":"209","possible_hits":"1",},
{"lineNum":"  363","line":"    secp256k1_sha256_finalize(&sha256, b32);","class":"lineCov","hits":"1","order":"210","possible_hits":"1",},
{"lineNum":"  364","line":"    secp256k1_fe_set_b32(&t, b32);","class":"lineCov","hits":"1","order":"302","possible_hits":"1",},
{"lineNum":"  365","line":"    indifferent_hash(&add, &t);","class":"lineCov","hits":"1","order":"314","possible_hits":"1",},
{"lineNum":"  366","line":"    secp256k1_gej_set_ge(&accum, &add);","class":"lineCov","hits":"1","order":"524","possible_hits":"1",},
{"lineNum":"  367","line":"    secp256k1_sha256_initialize(&sha256);","class":"lineCov","hits":"1","order":"536","possible_hits":"1",},
{"lineNum":"  368","line":"    secp256k1_sha256_write(&sha256, prefix2, 16);","class":"lineCov","hits":"1","order":"537","possible_hits":"1",},
{"lineNum":"  369","line":"    secp256k1_sha256_write(&sha256, seed, 32);","class":"lineCov","hits":"1","order":"538","possible_hits":"1",},
{"lineNum":"  370","line":"    secp256k1_sha256_finalize(&sha256, b32);","class":"lineCov","hits":"1","order":"539","possible_hits":"1",},
{"lineNum":"  371","line":"    secp256k1_fe_set_b32(&t, b32);","class":"lineCov","hits":"1","order":"540","possible_hits":"1",},
{"lineNum":"  372","line":"    indifferent_hash(&add, &t);","class":"lineCov","hits":"1","order":"541","possible_hits":"1",},
{"lineNum":"  373","line":"    secp256k1_gej_add_ge(&accum, &accum, &add);","class":"lineCov","hits":"1","order":"542","possible_hits":"1",},
{"lineNum":"  374","line":"    secp256k1_ge_set_gej(&add, &accum);","class":"lineCov","hits":"1","order":"608","possible_hits":"1",},
{"lineNum":"  375","line":"    secp256k1_fe_normalize(&add.x);","class":"lineCov","hits":"1","order":"620","possible_hits":"1",},
{"lineNum":"  376","line":"    secp256k1_fe_get_b32(gen + 1, &add.x);","class":"lineCov","hits":"1","order":"641","possible_hits":"1",},
{"lineNum":"  377","line":"    gen[0] = 11 ^ secp256k1_fe_is_quad_var(&add.y);","class":"lineCov","hits":"1","order":"651","possible_hits":"1",},
{"lineNum":"  378","line":"    //load group element from gen;"},
{"lineNum":"  379","line":"    secp256k1_fe fe;"},
{"lineNum":"  380","line":"    secp256k1_fe_set_b32(&fe, gen + 1);","class":"lineCov","hits":"1","order":"654","possible_hits":"1",},
{"lineNum":"  381","line":"    secp256k1_ge ge;"},
{"lineNum":"  382","line":"    secp256k1_ge_set_xquad(&ge, &fe);","class":"lineCov","hits":"1","order":"655","possible_hits":"1",},
{"lineNum":"  383","line":"    if (gen[0] & 1) {","class":"lineCov","hits":"1","order":"664","possible_hits":"1",},
{"lineNum":"  384","line":"        secp256k1_ge_neg(&ge, &ge);","class":"lineCov","hits":"1","order":"713","possible_hits":"1",},
{"lineNum":"  385","line":"    }"},
{"lineNum":"  386","line":"    secp256k1_gej_set_ge(reinterpret_cast<secp256k1_gej *>(g_), &ge);","class":"lineCov","hits":"1","order":"665","possible_hits":"1",},
{"lineNum":"  387","line":"    return *this;","class":"linePartCov","hits":"1","order":"666","possible_hits":"2",},
{"lineNum":"  388","line":"}"},
{"lineNum":"  389","line":""},
{"lineNum":"  390","line":"void GroupElement::normalSha256(unsigned char* result) const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  391","line":"    GroupElement tmp = *this;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  392","line":"    auto g = reinterpret_cast<secp256k1_gej *>(tmp.g_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  393","line":"    secp256k1_fe_normalize(&g->x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  394","line":"    secp256k1_fe_normalize(&g->y);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  395","line":"    tmp.sha256(result);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  396","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  397","line":""},
{"lineNum":"  398","line":"void GroupElement::sha256(unsigned char* result) const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  399","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  400","line":"    unsigned char buff[64];"},
{"lineNum":"  401","line":"    secp256k1_fe_get_b32(&buff[0], &g->x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  402","line":"    secp256k1_fe_get_b32(&buff[32], &g->y);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  403","line":"    secp256k1_rfc6979_hmac_sha256_t sha256;"},
{"lineNum":"  404","line":"    secp256k1_rfc6979_hmac_sha256_initialize(&sha256, buff, 64);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  405","line":"    secp256k1_rfc6979_hmac_sha256_generate(&sha256,  result, 32);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  406","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  407","line":""},
{"lineNum":"  408","line":"template<std::size_t Len>"},
{"lineNum":"  409","line":"std::string _convertToString(const unsigned char(&buffer) [Len], int base) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  410","line":"    if (Len != 32) {"},
{"lineNum":"  411","line":"        throw std::invalid_argument(\"invalid buffer size\");"},
{"lineNum":"  412","line":"    }"},
{"lineNum":"  413","line":""},
{"lineNum":"  414","line":"    uint8_t val[32];"},
{"lineNum":"  415","line":"    memcpy(val, buffer, sizeof(val));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  416","line":""},
{"lineNum":"  417","line":"    std::stringstream str;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  418","line":"    auto negative = base == 10 && (buffer[0] & 0x80);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  419","line":"    if (negative) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  420","line":"        _negate(val);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  421","line":"        str << \'-\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  422","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  423","line":""},
{"lineNum":"  424","line":"    unsigned char dst[128];"},
{"lineNum":"  425","line":"    int strLen = _convertBase(val, &val[std::extent<decltype(val)>::value], 256, dst, base);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  426","line":""},
{"lineNum":"  427","line":"    int startAt = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  428","line":"    while (dst[startAt] == 0) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  429","line":"        startAt++;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  430","line":"    }"},
{"lineNum":"  431","line":""},
{"lineNum":"  432","line":"    for (int i = 0; i < strLen; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  433","line":"        unsigned char v = dst[startAt + i];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  434","line":"        char ch;"},
{"lineNum":"  435","line":"        switch (base) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  436","line":"        case 10:"},
{"lineNum":"  437","line":"            ch = \'0\' + v;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  438","line":"            break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  439","line":"        case 16:"},
{"lineNum":"  440","line":"            if (v >= 0 && v <= 9) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  441","line":"                ch = \'0\' + v;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  442","line":"            } else {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  443","line":"                ch = \'a\' + v - 10;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  444","line":"            }"},
{"lineNum":"  445","line":"            break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  446","line":"        default:"},
{"lineNum":"  447","line":"            break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  448","line":"        }"},
{"lineNum":"  449","line":""},
{"lineNum":"  450","line":"        str << ch;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  451","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  452","line":""},
{"lineNum":"  453","line":"    return str.str();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  454","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  455","line":""},
{"lineNum":"  456","line":"std::string GroupElement::tostring() const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  457","line":"    int base = 10;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  458","line":"    secp256k1_ge ge = gej_to_ge(*reinterpret_cast<secp256k1_gej *>(g_));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  459","line":""},
{"lineNum":"  460","line":"    if (ge.infinity) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  461","line":"    return std::string(\"O\");","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  462","line":"    }"},
{"lineNum":"  463","line":""},
{"lineNum":"  464","line":"    std::stringstream str;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  465","line":"    unsigned char buffer[32];"},
{"lineNum":"  466","line":""},
{"lineNum":"  467","line":"    str << \'(\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  468","line":"    secp256k1_fe_get_b32(buffer,&ge.x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  469","line":"    str << _convertToString(buffer, base);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  470","line":"    str << \',\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  471","line":"    secp256k1_fe_get_b32(buffer,&ge.y);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  472","line":"    str << _convertToString(buffer, base);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  473","line":"    str << \')\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  474","line":""},
{"lineNum":"  475","line":"    return str.str();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  476","line":"}","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  477","line":""},
{"lineNum":"  478","line":"std::string GroupElement::GetHex() const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  479","line":"    int base = 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  480","line":"    secp256k1_ge ge = gej_to_ge(*reinterpret_cast<secp256k1_gej *>(g_));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  481","line":""},
{"lineNum":"  482","line":"    if (ge.infinity) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  483","line":"        return std::string(\"O\");","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  484","line":"    }"},
{"lineNum":"  485","line":""},
{"lineNum":"  486","line":"    std::stringstream str;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  487","line":"    unsigned char buffer[32];"},
{"lineNum":"  488","line":""},
{"lineNum":"  489","line":"    str << \'(\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  490","line":"    secp256k1_fe_get_b32(buffer,&ge.x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  491","line":"    str << _convertToString(buffer, base);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  492","line":"    str << \',\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  493","line":"    secp256k1_fe_get_b32(buffer,&ge.y);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  494","line":"    str << _convertToString(buffer, base);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  495","line":"    str << \')\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  496","line":""},
{"lineNum":"  497","line":"    return str.str();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  498","line":"}","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  499","line":""},
{"lineNum":"  500","line":"unsigned char* GroupElement::serialize() const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  501","line":"    auto g = reinterpret_cast<secp256k1_gej *>(g_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  502","line":"    unsigned char* data = new unsigned char[ 2 * sizeof(secp256k1_fe)];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  503","line":"    memcpy(&data[0], &g->x.n[0], sizeof(secp256k1_fe));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  504","line":"    memcpy(&data[0] + sizeof(secp256k1_fe), &g->y.n[0], sizeof(secp256k1_fe));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  505","line":"    return data;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  506","line":"}"},
{"lineNum":"  507","line":""},
{"lineNum":"  508","line":"unsigned char* GroupElement::serialize(unsigned char* buffer) const {","class":"lineCov","hits":"2","order":"1145","possible_hits":"2",},
{"lineNum":"  509","line":"    secp256k1_ge value = gej_to_ge(*reinterpret_cast<secp256k1_gej *>(g_));","class":"lineCov","hits":"1","order":"1146","possible_hits":"1",},
{"lineNum":"  510","line":"    secp256k1_fe x = value.x;","class":"lineCov","hits":"1","order":"1147","possible_hits":"1",},
{"lineNum":"  511","line":"    secp256k1_fe y = value.y;","class":"lineCov","hits":"1","order":"1148","possible_hits":"1",},
{"lineNum":"  512","line":"    secp256k1_fe_normalize(&x);","class":"lineCov","hits":"1","order":"1149","possible_hits":"1",},
{"lineNum":"  513","line":"    secp256k1_fe_normalize(&y);","class":"lineCov","hits":"1","order":"1150","possible_hits":"1",},
{"lineNum":"  514","line":"    unsigned char oddness = secp256k1_fe_is_odd(&y);","class":"lineCov","hits":"1","order":"1151","possible_hits":"1",},
{"lineNum":"  515","line":"    unsigned char infinity = value.infinity;","class":"lineCov","hits":"1","order":"1152","possible_hits":"1",},
{"lineNum":"  516","line":"    secp256k1_fe_get_b32(buffer, &x);","class":"lineCov","hits":"1","order":"1153","possible_hits":"1",},
{"lineNum":"  517","line":"    buffer[32] = oddness;","class":"lineCov","hits":"1","order":"1154","possible_hits":"1",},
{"lineNum":"  518","line":"    buffer[33] = infinity;","class":"lineCov","hits":"1","order":"1155","possible_hits":"1",},
{"lineNum":"  519","line":"    return buffer + memoryRequired();","class":"lineCov","hits":"1","order":"1156","possible_hits":"1",},
{"lineNum":"  520","line":"}"},
{"lineNum":"  521","line":""},
{"lineNum":"  522","line":"const unsigned char* GroupElement::deserialize(const unsigned char* buffer) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  523","line":"    secp256k1_fe x;"},
{"lineNum":"  524","line":"    secp256k1_fe_set_b32(&x, buffer);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  525","line":"    unsigned char oddness = buffer[32];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  526","line":"    unsigned char infinity = buffer[33];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  527","line":"    secp256k1_ge result;"},
{"lineNum":"  528","line":"    secp256k1_ge_set_xo_var(&result, &x, (int)oddness);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  529","line":"    result.infinity = (int)infinity;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  530","line":""},
{"lineNum":"  531","line":"    secp256k1_gej_set_ge(reinterpret_cast<secp256k1_gej *>(g_), &result);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  532","line":""},
{"lineNum":"  533","line":"    if (!secp256k1_ge_is_valid_var(&result) && !result.infinity) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  534","line":"        throw std::invalid_argument(\"GroupElement: deserialize failed\");","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  535","line":"    }"},
{"lineNum":"  536","line":"    return buffer + memoryRequired();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  537","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  538","line":""},
{"lineNum":"  539","line":"std::vector<unsigned char> GroupElement::getvch() const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  540","line":"    unsigned char buffer[memoryRequired()];"},
{"lineNum":"  541","line":"    serialize(buffer);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  542","line":"    std::vector<unsigned char> result;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  543","line":"    result.insert(result.begin(), buffer, buffer + memoryRequired());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  544","line":"    return result;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  545","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  546","line":""},
{"lineNum":"  547","line":"std::size_t GroupElement::hash() const"},
{"lineNum":"  548","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  549","line":"    auto ge = gej_to_ge(*reinterpret_cast<secp256k1_gej *>(g_));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  550","line":"    std::array<unsigned char, 32 * 2> coord;"},
{"lineNum":"  551","line":""},
{"lineNum":"  552","line":"    if (ge.infinity) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  553","line":"        coord.fill(0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  554","line":"    } else {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  555","line":"        secp256k1_fe_get_b32(&coord[0], &ge.x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  556","line":"        secp256k1_fe_get_b32(&coord[32], &ge.y);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  557","line":"    }"},
{"lineNum":"  558","line":""},
{"lineNum":"  559","line":"    return std::hash<std::string>()(std::string(coord.begin(), coord.end()));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  560","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  561","line":""},
{"lineNum":"  562","line":"std::size_t GroupElement::get_hash() const {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  563","line":"    secp256k1_fe x = reinterpret_cast<secp256k1_gej *>(g_)->x;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  564","line":"    secp256k1_fe_normalize(&x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  565","line":"    return x.n[0] ^ (x.n[1] << 16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  566","line":"}"},
{"lineNum":"  567","line":""},
{"lineNum":"  568","line":"const void* GroupElement::get_value() const {","class":"lineCov","hits":"2","order":"1257","possible_hits":"2",},
{"lineNum":"  569","line":"    return g_;","class":"lineCov","hits":"1","order":"1258","possible_hits":"1",},
{"lineNum":"  570","line":"}"},
{"lineNum":"  571","line":""},
{"lineNum":"  572","line":"GroupElement& GroupElement::set_base_g() {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  573","line":"    secp256k1_gej_set_ge(reinterpret_cast<secp256k1_gej *>(g_), &secp256k1_ge_const_g);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  574","line":"    return *this;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  575","line":"}"},
{"lineNum":"  576","line":""},
{"lineNum":"  577","line":"} // namespace secp_primitives"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "bpplus_debug", "date" : "2023-08-25 16:07:56", "instrumented" : 343, "covered" : 139,};
var merged_data = [];
