var data = {lines:[
{"lineNum":"    1","line":" /*********************************************************************"},
{"lineNum":"    2","line":" * Copyright (c) 2016 Pieter Wuille                                   *"},
{"lineNum":"    3","line":" * Distributed under the MIT software license, see the accompanying   *"},
{"lineNum":"    4","line":" * file COPYING or http://www.opensource.org/licenses/mit-license.php.*"},
{"lineNum":"    5","line":" **********************************************************************/"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"/* Constant time, unoptimized, concise, plain C, AES implementation"},
{"lineNum":"    8","line":" * Based On:"},
{"lineNum":"    9","line":" *   Emilia Kasper and Peter Schwabe, Faster and Timing-Attack Resistant AES-GCM"},
{"lineNum":"   10","line":" *   http://www.iacr.org/archive/ches2009/57470001/57470001.pdf"},
{"lineNum":"   11","line":" * But using 8 16-bit integers representing a single AES state rather than 8 128-bit"},
{"lineNum":"   12","line":" * integers representing 8 AES states."},
{"lineNum":"   13","line":" */"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"#include \"ctaes.h\""},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"/* Slice variable slice_i contains the i\'th bit of the 16 state variables in this order:"},
{"lineNum":"   18","line":" *  0  1  2  3"},
{"lineNum":"   19","line":" *  4  5  6  7"},
{"lineNum":"   20","line":" *  8  9 10 11"},
{"lineNum":"   21","line":" * 12 13 14 15"},
{"lineNum":"   22","line":" */"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"/** Convert a byte to sliced form, storing it corresponding to given row and column in s */"},
{"lineNum":"   25","line":"static void LoadByte(AES_state* s, unsigned char byte, int r, int c) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   26","line":"    int i;"},
{"lineNum":"   27","line":"    for (i = 0; i < 8; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   28","line":"        s->slice[i] |= (byte & 1) << (r * 4 + c);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"        byte >>= 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   30","line":"    }"},
{"lineNum":"   31","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"/** Load 16 bytes of data into 8 sliced integers */"},
{"lineNum":"   34","line":"static void LoadBytes(AES_state *s, const unsigned char* data16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   35","line":"    int c;"},
{"lineNum":"   36","line":"    for (c = 0; c < 4; c++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   37","line":"        int r;"},
{"lineNum":"   38","line":"        for (r = 0; r < 4; r++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   39","line":"            LoadByte(s, *(data16++), r, c);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   40","line":"        }"},
{"lineNum":"   41","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   42","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"/** Convert 8 sliced integers into 16 bytes of data */"},
{"lineNum":"   45","line":"static void SaveBytes(unsigned char* data16, const AES_state *s) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   46","line":"    int c;"},
{"lineNum":"   47","line":"    for (c = 0; c < 4; c++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   48","line":"        int r;"},
{"lineNum":"   49","line":"        for (r = 0; r < 4; r++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   50","line":"            int b;"},
{"lineNum":"   51","line":"            uint8_t v = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   52","line":"            for (b = 0; b < 8; b++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   53","line":"                v |= ((s->slice[b] >> (r * 4 + c)) & 1) << b;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   54","line":"            }"},
{"lineNum":"   55","line":"            *(data16++) = v;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":"        }"},
{"lineNum":"   57","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   58","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"/* S-box implementation based on the gate logic from:"},
{"lineNum":"   61","line":" *   Joan Boyar and Rene Peralta, A depth-16 circuit for the AES S-box."},
{"lineNum":"   62","line":" *   https://eprint.iacr.org/2011/332.pdf"},
{"lineNum":"   63","line":"*/"},
{"lineNum":"   64","line":"static void SubBytes(AES_state *s, int inv) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   65","line":"    /* Load the bit slices */"},
{"lineNum":"   66","line":"    uint16_t U0 = s->slice[7], U1 = s->slice[6], U2 = s->slice[5], U3 = s->slice[4];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   67","line":"    uint16_t U4 = s->slice[3], U5 = s->slice[2], U6 = s->slice[1], U7 = s->slice[0];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"    uint16_t T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16;"},
{"lineNum":"   70","line":"    uint16_t T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, D;"},
{"lineNum":"   71","line":"    uint16_t M1, M6, M11, M13, M15, M20, M21, M22, M23, M25, M37, M38, M39, M40;"},
{"lineNum":"   72","line":"    uint16_t M41, M42, M43, M44, M45, M46, M47, M48, M49, M50, M51, M52, M53, M54;"},
{"lineNum":"   73","line":"    uint16_t M55, M56, M57, M58, M59, M60, M61, M62, M63;"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"    if (inv) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"        uint16_t R5, R13, R17, R18, R19;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   77","line":"        /* Undo linear postprocessing */"},
{"lineNum":"   78","line":"        T23 = U0 ^ U3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   79","line":"        T22 = ~(U1 ^ U3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   80","line":"        T2 = ~(U0 ^ U1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   81","line":"        T1 = U3 ^ U4;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   82","line":"        T24 = ~(U4 ^ U7);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   83","line":"        R5 = U6 ^ U7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   84","line":"        T8 = ~(U1 ^ T23);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   85","line":"        T19 = T22 ^ R5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":"        T9 = ~(U7 ^ T1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":"        T10 = T2 ^ T24;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   88","line":"        T13 = T2 ^ R5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   89","line":"        T3 = T1 ^ R5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   90","line":"        T25 = ~(U2 ^ T1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   91","line":"        R13 = U1 ^ U6;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   92","line":"        T17 = ~(U2 ^ T19);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   93","line":"        T20 = T24 ^ R13;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   94","line":"        T4 = U4 ^ T8;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   95","line":"        R17 = ~(U2 ^ U5);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   96","line":"        R18 = ~(U5 ^ U6);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   97","line":"        R19 = ~(U2 ^ U4);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   98","line":"        D = U0 ^ R17;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   99","line":"        T6 = T22 ^ R17;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  100","line":"        T16 = R13 ^ R19;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  101","line":"        T27 = T1 ^ R18;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  102","line":"        T15 = T10 ^ T27;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  103","line":"        T14 = T10 ^ R18;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  104","line":"        T26 = T3 ^ T16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  105","line":"    } else {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  106","line":"        /* Linear preprocessing. */"},
{"lineNum":"  107","line":"        T1 = U0 ^ U3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":"        T2 = U0 ^ U5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  109","line":"        T3 = U0 ^ U6;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  110","line":"        T4 = U3 ^ U5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":"        T5 = U4 ^ U6;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  112","line":"        T6 = T1 ^ T5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  113","line":"        T7 = U1 ^ U2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  114","line":"        T8 = U7 ^ T6;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  115","line":"        T9 = U7 ^ T7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":"        T10 = T6 ^ T7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  117","line":"        T11 = U1 ^ U5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  118","line":"        T12 = U2 ^ U5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  119","line":"        T13 = T3 ^ T4;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  120","line":"        T14 = T6 ^ T11;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  121","line":"        T15 = T5 ^ T11;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  122","line":"        T16 = T5 ^ T12;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  123","line":"        T17 = T9 ^ T16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"        T18 = U3 ^ U7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  125","line":"        T19 = T7 ^ T18;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  126","line":"        T20 = T1 ^ T19;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  127","line":"        T21 = U6 ^ U7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  128","line":"        T22 = T7 ^ T21;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  129","line":"        T23 = T2 ^ T22;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  130","line":"        T24 = T2 ^ T10;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  131","line":"        T25 = T20 ^ T17;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  132","line":"        T26 = T3 ^ T16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  133","line":"        T27 = T1 ^ T12;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  134","line":"        D = U7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  135","line":"    }"},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":"    /* Non-linear transformation (shared between the forward and backward case) */"},
{"lineNum":"  138","line":"    M1 = T13 & T6;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  139","line":"    M6 = T3 & T16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  140","line":"    M11 = T1 & T15;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  141","line":"    M13 = (T4 & T27) ^ M11;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  142","line":"    M15 = (T2 & T10) ^ M11;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  143","line":"    M20 = T14 ^ M1 ^ (T23 & T8) ^ M13;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  144","line":"    M21 = (T19 & D) ^ M1 ^ T24 ^ M15;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  145","line":"    M22 = T26 ^ M6 ^ (T22 & T9) ^ M13;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  146","line":"    M23 = (T20 & T17) ^ M6 ^ M15 ^ T25;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  147","line":"    M25 = M22 & M20;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  148","line":"    M37 = M21 ^ ((M20 ^ M21) & (M23 ^ M25));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  149","line":"    M38 = M20 ^ M25 ^ (M21 | (M20 & M23));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  150","line":"    M39 = M23 ^ ((M22 ^ M23) & (M21 ^ M25));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  151","line":"    M40 = M22 ^ M25 ^ (M23 | (M21 & M22));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  152","line":"    M41 = M38 ^ M40;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  153","line":"    M42 = M37 ^ M39;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  154","line":"    M43 = M37 ^ M38;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  155","line":"    M44 = M39 ^ M40;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  156","line":"    M45 = M42 ^ M41;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  157","line":"    M46 = M44 & T6;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  158","line":"    M47 = M40 & T8;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  159","line":"    M48 = M39 & D;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  160","line":"    M49 = M43 & T16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  161","line":"    M50 = M38 & T9;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  162","line":"    M51 = M37 & T17;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  163","line":"    M52 = M42 & T15;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  164","line":"    M53 = M45 & T27;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  165","line":"    M54 = M41 & T10;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  166","line":"    M55 = M44 & T13;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  167","line":"    M56 = M40 & T23;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  168","line":"    M57 = M39 & T19;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  169","line":"    M58 = M43 & T3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  170","line":"    M59 = M38 & T22;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  171","line":"    M60 = M37 & T20;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  172","line":"    M61 = M42 & T1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  173","line":"    M62 = M45 & T4;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  174","line":"    M63 = M41 & T2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"    if (inv){","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  177","line":"        /* Undo linear preprocessing */"},
{"lineNum":"  178","line":"        uint16_t P0 = M52 ^ M61;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  179","line":"        uint16_t P1 = M58 ^ M59;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  180","line":"        uint16_t P2 = M54 ^ M62;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  181","line":"        uint16_t P3 = M47 ^ M50;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  182","line":"        uint16_t P4 = M48 ^ M56;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  183","line":"        uint16_t P5 = M46 ^ M51;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  184","line":"        uint16_t P6 = M49 ^ M60;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  185","line":"        uint16_t P7 = P0 ^ P1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  186","line":"        uint16_t P8 = M50 ^ M53;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  187","line":"        uint16_t P9 = M55 ^ M63;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  188","line":"        uint16_t P10 = M57 ^ P4;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  189","line":"        uint16_t P11 = P0 ^ P3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  190","line":"        uint16_t P12 = M46 ^ M48;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  191","line":"        uint16_t P13 = M49 ^ M51;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  192","line":"        uint16_t P14 = M49 ^ M62;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  193","line":"        uint16_t P15 = M54 ^ M59;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  194","line":"        uint16_t P16 = M57 ^ M61;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  195","line":"        uint16_t P17 = M58 ^ P2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  196","line":"        uint16_t P18 = M63 ^ P5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  197","line":"        uint16_t P19 = P2 ^ P3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  198","line":"        uint16_t P20 = P4 ^ P6;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  199","line":"        uint16_t P22 = P2 ^ P7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  200","line":"        uint16_t P23 = P7 ^ P8;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  201","line":"        uint16_t P24 = P5 ^ P7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  202","line":"        uint16_t P25 = P6 ^ P10;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  203","line":"        uint16_t P26 = P9 ^ P11;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  204","line":"        uint16_t P27 = P10 ^ P18;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  205","line":"        uint16_t P28 = P11 ^ P25;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  206","line":"        uint16_t P29 = P15 ^ P20;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  207","line":"        s->slice[7] = P13 ^ P22;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  208","line":"        s->slice[6] = P26 ^ P29;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  209","line":"        s->slice[5] = P17 ^ P28;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  210","line":"        s->slice[4] = P12 ^ P22;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  211","line":"        s->slice[3] = P23 ^ P27;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  212","line":"        s->slice[2] = P19 ^ P24;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  213","line":"        s->slice[1] = P14 ^ P23;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  214","line":"        s->slice[0] = P9 ^ P16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  215","line":"    } else {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  216","line":"        /* Linear postprocessing */"},
{"lineNum":"  217","line":"        uint16_t L0 = M61 ^ M62;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  218","line":"        uint16_t L1 = M50 ^ M56;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  219","line":"        uint16_t L2 = M46 ^ M48;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  220","line":"        uint16_t L3 = M47 ^ M55;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  221","line":"        uint16_t L4 = M54 ^ M58;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  222","line":"        uint16_t L5 = M49 ^ M61;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  223","line":"        uint16_t L6 = M62 ^ L5;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  224","line":"        uint16_t L7 = M46 ^ L3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  225","line":"        uint16_t L8 = M51 ^ M59;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  226","line":"        uint16_t L9 = M52 ^ M53;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  227","line":"        uint16_t L10 = M53 ^ L4;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  228","line":"        uint16_t L11 = M60 ^ L2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  229","line":"        uint16_t L12 = M48 ^ M51;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  230","line":"        uint16_t L13 = M50 ^ L0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  231","line":"        uint16_t L14 = M52 ^ M61;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  232","line":"        uint16_t L15 = M55 ^ L1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  233","line":"        uint16_t L16 = M56 ^ L0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  234","line":"        uint16_t L17 = M57 ^ L1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  235","line":"        uint16_t L18 = M58 ^ L8;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  236","line":"        uint16_t L19 = M63 ^ L4;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  237","line":"        uint16_t L20 = L0 ^ L1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  238","line":"        uint16_t L21 = L1 ^ L7;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  239","line":"        uint16_t L22 = L3 ^ L12;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  240","line":"        uint16_t L23 = L18 ^ L2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  241","line":"        uint16_t L24 = L15 ^ L9;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  242","line":"        uint16_t L25 = L6 ^ L10;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  243","line":"        uint16_t L26 = L7 ^ L9;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  244","line":"        uint16_t L27 = L8 ^ L10;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  245","line":"        uint16_t L28 = L11 ^ L14;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  246","line":"        uint16_t L29 = L11 ^ L17;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  247","line":"        s->slice[7] = L6 ^ L24;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  248","line":"        s->slice[6] = ~(L16 ^ L26);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  249","line":"        s->slice[5] = ~(L19 ^ L28);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  250","line":"        s->slice[4] = L6 ^ L21;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  251","line":"        s->slice[3] = L20 ^ L22;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  252","line":"        s->slice[2] = L25 ^ L29;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  253","line":"        s->slice[1] = ~(L13 ^ L27);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  254","line":"        s->slice[0] = ~(L6 ^ L23);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  255","line":"    }"},
{"lineNum":"  256","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  257","line":""},
{"lineNum":"  258","line":"#define BIT_RANGE(from,to) (((1 << ((to) - (from))) - 1) << (from))"},
{"lineNum":"  259","line":""},
{"lineNum":"  260","line":"#define BIT_RANGE_LEFT(x,from,to,shift) (((x) & BIT_RANGE((from), (to))) << (shift))"},
{"lineNum":"  261","line":"#define BIT_RANGE_RIGHT(x,from,to,shift) (((x) & BIT_RANGE((from), (to))) >> (shift))"},
{"lineNum":"  262","line":""},
{"lineNum":"  263","line":"static void ShiftRows(AES_state* s) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  264","line":"    int i;"},
{"lineNum":"  265","line":"    for (i = 0; i < 8; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  266","line":"        uint16_t v = s->slice[i];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  267","line":"        s->slice[i] =","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  268","line":"            (v & BIT_RANGE(0, 4)) |","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  269","line":"            BIT_RANGE_LEFT(v, 4, 5, 3) | BIT_RANGE_RIGHT(v, 5, 8, 1) |","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  270","line":"            BIT_RANGE_LEFT(v, 8, 10, 2) | BIT_RANGE_RIGHT(v, 10, 12, 2) |","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  271","line":"            BIT_RANGE_LEFT(v, 12, 15, 1) | BIT_RANGE_RIGHT(v, 15, 16, 3);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  272","line":"    }"},
{"lineNum":"  273","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"static void InvShiftRows(AES_state* s) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  276","line":"    int i;"},
{"lineNum":"  277","line":"    for (i = 0; i < 8; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  278","line":"        uint16_t v = s->slice[i];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  279","line":"        s->slice[i] =","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  280","line":"            (v & BIT_RANGE(0, 4)) |","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  281","line":"            BIT_RANGE_LEFT(v, 4, 7, 1) | BIT_RANGE_RIGHT(v, 7, 8, 3) |","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  282","line":"            BIT_RANGE_LEFT(v, 8, 10, 2) | BIT_RANGE_RIGHT(v, 10, 12, 2) |","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  283","line":"            BIT_RANGE_LEFT(v, 12, 13, 3) | BIT_RANGE_RIGHT(v, 13, 16, 1);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  284","line":"    }"},
{"lineNum":"  285","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"#define ROT(x,b) (((x) >> ((b) * 4)) | ((x) << ((4-(b)) * 4)))"},
{"lineNum":"  288","line":""},
{"lineNum":"  289","line":"static void MixColumns(AES_state* s, int inv) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  290","line":"    /* The MixColumns transform treats the bytes of the columns of the state as"},
{"lineNum":"  291","line":"     * coefficients of a 3rd degree polynomial over GF(2^8) and multiplies them"},
{"lineNum":"  292","line":"     * by the fixed polynomial a(x) = {03}x^3 + {01}x^2 + {01}x + {02}, modulo"},
{"lineNum":"  293","line":"     * x^4 + {01}."},
{"lineNum":"  294","line":"     *"},
{"lineNum":"  295","line":"     * In the inverse transform, we multiply by the inverse of a(x),"},
{"lineNum":"  296","line":"     * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}. This is equal to"},
{"lineNum":"  297","line":"     * a(x) * ({04}x^2 + {05}), so we can reuse the forward transform\'s code"},
{"lineNum":"  298","line":"     * (found in OpenSSL\'s bsaes-x86_64.pl, attributed to Jussi Kivilinna)"},
{"lineNum":"  299","line":"     *"},
{"lineNum":"  300","line":"     * In the bitsliced representation, a multiplication of every column by x"},
{"lineNum":"  301","line":"     * mod x^4 + 1 is simply a right rotation."},
{"lineNum":"  302","line":"     */"},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"    /* Shared for both directions is a multiplication by a(x), which can be"},
{"lineNum":"  305","line":"     * rewritten as (x^3 + x^2 + x) + {02}*(x^3 + {01})."},
{"lineNum":"  306","line":"     *"},
{"lineNum":"  307","line":"     * First compute s into the s? variables, (x^3 + {01}) * s into the s?_01"},
{"lineNum":"  308","line":"     * variables and (x^3 + x^2 + x)*s into the s?_123 variables."},
{"lineNum":"  309","line":"     */"},
{"lineNum":"  310","line":"    uint16_t s0 = s->slice[0], s1 = s->slice[1], s2 = s->slice[2], s3 = s->slice[3];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  311","line":"    uint16_t s4 = s->slice[4], s5 = s->slice[5], s6 = s->slice[6], s7 = s->slice[7];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  312","line":"    uint16_t s0_01 = s0 ^ ROT(s0, 1), s0_123 = ROT(s0_01, 1) ^ ROT(s0, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  313","line":"    uint16_t s1_01 = s1 ^ ROT(s1, 1), s1_123 = ROT(s1_01, 1) ^ ROT(s1, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  314","line":"    uint16_t s2_01 = s2 ^ ROT(s2, 1), s2_123 = ROT(s2_01, 1) ^ ROT(s2, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  315","line":"    uint16_t s3_01 = s3 ^ ROT(s3, 1), s3_123 = ROT(s3_01, 1) ^ ROT(s3, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  316","line":"    uint16_t s4_01 = s4 ^ ROT(s4, 1), s4_123 = ROT(s4_01, 1) ^ ROT(s4, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  317","line":"    uint16_t s5_01 = s5 ^ ROT(s5, 1), s5_123 = ROT(s5_01, 1) ^ ROT(s5, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  318","line":"    uint16_t s6_01 = s6 ^ ROT(s6, 1), s6_123 = ROT(s6_01, 1) ^ ROT(s6, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  319","line":"    uint16_t s7_01 = s7 ^ ROT(s7, 1), s7_123 = ROT(s7_01, 1) ^ ROT(s7, 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  320","line":"    /* Now compute s = s?_123 + {02} * s?_01. */"},
{"lineNum":"  321","line":"    s->slice[0] = s7_01 ^ s0_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  322","line":"    s->slice[1] = s7_01 ^ s0_01 ^ s1_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  323","line":"    s->slice[2] = s1_01 ^ s2_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  324","line":"    s->slice[3] = s7_01 ^ s2_01 ^ s3_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  325","line":"    s->slice[4] = s7_01 ^ s3_01 ^ s4_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  326","line":"    s->slice[5] = s4_01 ^ s5_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  327","line":"    s->slice[6] = s5_01 ^ s6_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  328","line":"    s->slice[7] = s6_01 ^ s7_123;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  329","line":"    if (inv) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  330","line":"        /* In the reverse direction, we further need to multiply by"},
{"lineNum":"  331","line":"         * {04}x^2 + {05}, which can be written as {04} * (x^2 + {01}) + {01}."},
{"lineNum":"  332","line":"         *"},
{"lineNum":"  333","line":"         * First compute (x^2 + {01}) * s into the t?_02 variables: */"},
{"lineNum":"  334","line":"        uint16_t t0_02 = s->slice[0] ^ ROT(s->slice[0], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  335","line":"        uint16_t t1_02 = s->slice[1] ^ ROT(s->slice[1], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  336","line":"        uint16_t t2_02 = s->slice[2] ^ ROT(s->slice[2], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  337","line":"        uint16_t t3_02 = s->slice[3] ^ ROT(s->slice[3], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  338","line":"        uint16_t t4_02 = s->slice[4] ^ ROT(s->slice[4], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  339","line":"        uint16_t t5_02 = s->slice[5] ^ ROT(s->slice[5], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  340","line":"        uint16_t t6_02 = s->slice[6] ^ ROT(s->slice[6], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  341","line":"        uint16_t t7_02 = s->slice[7] ^ ROT(s->slice[7], 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  342","line":"        /* And then update s += {04} * t?_02 */"},
{"lineNum":"  343","line":"        s->slice[0] ^= t6_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  344","line":"        s->slice[1] ^= t6_02 ^ t7_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  345","line":"        s->slice[2] ^= t0_02 ^ t7_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  346","line":"        s->slice[3] ^= t1_02 ^ t6_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  347","line":"        s->slice[4] ^= t2_02 ^ t6_02 ^ t7_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  348","line":"        s->slice[5] ^= t3_02 ^ t7_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  349","line":"        s->slice[6] ^= t4_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  350","line":"        s->slice[7] ^= t5_02;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  351","line":"    }"},
{"lineNum":"  352","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  353","line":""},
{"lineNum":"  354","line":"static void AddRoundKey(AES_state* s, const AES_state* round) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  355","line":"    int b;"},
{"lineNum":"  356","line":"    for (b = 0; b < 8; b++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  357","line":"        s->slice[b] ^= round->slice[b];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  358","line":"    }"},
{"lineNum":"  359","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"/** column_0(s) = column_c(a) */"},
{"lineNum":"  362","line":"static void GetOneColumn(AES_state* s, const AES_state* a, int c) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  363","line":"    int b;"},
{"lineNum":"  364","line":"    for (b = 0; b < 8; b++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  365","line":"        s->slice[b] = (a->slice[b] >> c) & 0x1111;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  366","line":"    }"},
{"lineNum":"  367","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  368","line":""},
{"lineNum":"  369","line":"/** column_c1(r) |= (column_0(s) ^= column_c2(a)) */"},
{"lineNum":"  370","line":"static void KeySetupColumnMix(AES_state* s, AES_state* r, const AES_state* a, int c1, int c2) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  371","line":"    int b;"},
{"lineNum":"  372","line":"    for (b = 0; b < 8; b++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  373","line":"        r->slice[b] |= ((s->slice[b] ^= ((a->slice[b] >> c2) & 0x1111)) & 0x1111) << c1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  374","line":"    }"},
{"lineNum":"  375","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  376","line":""},
{"lineNum":"  377","line":"/** Rotate the rows in s one position upwards, and xor in r */"},
{"lineNum":"  378","line":"static void KeySetupTransform(AES_state* s, const AES_state* r) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  379","line":"    int b;"},
{"lineNum":"  380","line":"    for (b = 0; b < 8; b++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  381","line":"        s->slice[b] = ((s->slice[b] >> 4) | (s->slice[b] << 12)) ^ r->slice[b];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  382","line":"    }"},
{"lineNum":"  383","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  384","line":""},
{"lineNum":"  385","line":"/* Multiply the cells in s by x, as polynomials over GF(2) mod x^8 + x^4 + x^3 + x + 1 */"},
{"lineNum":"  386","line":"static void MultX(AES_state* s) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  387","line":"    uint16_t top = s->slice[7];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  388","line":"    s->slice[7] = s->slice[6];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  389","line":"    s->slice[6] = s->slice[5];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  390","line":"    s->slice[5] = s->slice[4];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  391","line":"    s->slice[4] = s->slice[3] ^ top;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  392","line":"    s->slice[3] = s->slice[2] ^ top;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  393","line":"    s->slice[2] = s->slice[1];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  394","line":"    s->slice[1] = s->slice[0] ^ top;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  395","line":"    s->slice[0] = top;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  396","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  397","line":""},
{"lineNum":"  398","line":"/** Expand the cipher key into the key schedule."},
{"lineNum":"  399","line":" *"},
{"lineNum":"  400","line":" *  state must be a pointer to an array of size nrounds + 1."},
{"lineNum":"  401","line":" *  key must be a pointer to 4 * nkeywords bytes."},
{"lineNum":"  402","line":" *"},
{"lineNum":"  403","line":" *  AES128 uses nkeywords = 4, nrounds = 10"},
{"lineNum":"  404","line":" *  AES192 uses nkeywords = 6, nrounds = 12"},
{"lineNum":"  405","line":" *  AES256 uses nkeywords = 8, nrounds = 14"},
{"lineNum":"  406","line":" */"},
{"lineNum":"  407","line":"static void AES_setup(AES_state* rounds, const uint8_t* key, int nkeywords, int nrounds)"},
{"lineNum":"  408","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  409","line":"    int i;"},
{"lineNum":"  410","line":""},
{"lineNum":"  411","line":"    /* The one-byte round constant */"},
{"lineNum":"  412","line":"    AES_state rcon = {{1,0,0,0,0,0,0,0}};","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  413","line":"    /* The number of the word being generated, modulo nkeywords */"},
{"lineNum":"  414","line":"    int pos = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  415","line":"    /* The column representing the word currently being processed */"},
{"lineNum":"  416","line":"    AES_state column;"},
{"lineNum":"  417","line":""},
{"lineNum":"  418","line":"    for (i = 0; i < nrounds + 1; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  419","line":"        int b;"},
{"lineNum":"  420","line":"        for (b = 0; b < 8; b++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  421","line":"            rounds[i].slice[b] = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  422","line":"        }"},
{"lineNum":"  423","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  424","line":""},
{"lineNum":"  425","line":"    /* The first nkeywords round columns are just taken from the key directly. */"},
{"lineNum":"  426","line":"    for (i = 0; i < nkeywords; i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  427","line":"        int r;"},
{"lineNum":"  428","line":"        for (r = 0; r < 4; r++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  429","line":"            LoadByte(&rounds[i >> 2], *(key++), r, i & 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  430","line":"        }"},
{"lineNum":"  431","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  432","line":""},
{"lineNum":"  433","line":"    GetOneColumn(&column, &rounds[(nkeywords - 1) >> 2], (nkeywords - 1) & 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  434","line":""},
{"lineNum":"  435","line":"    for (i = nkeywords; i < 4 * (nrounds + 1); i++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  436","line":"        /* Transform column */"},
{"lineNum":"  437","line":"        if (pos == 0) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  438","line":"            SubBytes(&column, 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  439","line":"            KeySetupTransform(&column, &rcon);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  440","line":"            MultX(&rcon);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  441","line":"        } else if (nkeywords > 6 && pos == 4) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  442","line":"            SubBytes(&column, 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  443","line":"        }"},
{"lineNum":"  444","line":"        if (++pos == nkeywords) pos = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  445","line":"        KeySetupColumnMix(&column, &rounds[i >> 2], &rounds[(i - nkeywords) >> 2], i & 3, (i - nkeywords) & 3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  446","line":"    }"},
{"lineNum":"  447","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  448","line":""},
{"lineNum":"  449","line":"static void AES_encrypt(const AES_state* rounds, int nrounds, unsigned char* cipher16, const unsigned char* plain16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  450","line":"    AES_state s = {{0}};","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  451","line":"    int round;"},
{"lineNum":"  452","line":""},
{"lineNum":"  453","line":"    LoadBytes(&s, plain16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  454","line":"    AddRoundKey(&s, rounds++);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  455","line":""},
{"lineNum":"  456","line":"    for (round = 1; round < nrounds; round++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  457","line":"        SubBytes(&s, 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  458","line":"        ShiftRows(&s);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  459","line":"        MixColumns(&s, 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  460","line":"        AddRoundKey(&s, rounds++);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  461","line":"    }"},
{"lineNum":"  462","line":""},
{"lineNum":"  463","line":"    SubBytes(&s, 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  464","line":"    ShiftRows(&s);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  465","line":"    AddRoundKey(&s, rounds);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  466","line":""},
{"lineNum":"  467","line":"    SaveBytes(cipher16, &s);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  468","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  469","line":""},
{"lineNum":"  470","line":"static void AES_decrypt(const AES_state* rounds, int nrounds, unsigned char* plain16, const unsigned char* cipher16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  471","line":"    /* Most AES decryption implementations use the alternate scheme"},
{"lineNum":"  472","line":"     * (the Equivalent Inverse Cipher), which allows for more code reuse between"},
{"lineNum":"  473","line":"     * the encryption and decryption code, but requires separate setup for both."},
{"lineNum":"  474","line":"     */"},
{"lineNum":"  475","line":"    AES_state s = {{0}};","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  476","line":"    int round;"},
{"lineNum":"  477","line":""},
{"lineNum":"  478","line":"    rounds += nrounds;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  479","line":""},
{"lineNum":"  480","line":"    LoadBytes(&s, cipher16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  481","line":"    AddRoundKey(&s, rounds--);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  482","line":""},
{"lineNum":"  483","line":"    for (round = 1; round < nrounds; round++) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  484","line":"        InvShiftRows(&s);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  485","line":"        SubBytes(&s, 1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  486","line":"        AddRoundKey(&s, rounds--);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  487","line":"        MixColumns(&s, 1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  488","line":"    }"},
{"lineNum":"  489","line":""},
{"lineNum":"  490","line":"    InvShiftRows(&s);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  491","line":"    SubBytes(&s, 1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  492","line":"    AddRoundKey(&s, rounds);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  493","line":""},
{"lineNum":"  494","line":"    SaveBytes(plain16, &s);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  495","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  496","line":""},
{"lineNum":"  497","line":"void AES128_init(AES128_ctx* ctx, const unsigned char* key16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  498","line":"    AES_setup(ctx->rk, key16, 4, 10);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  499","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  500","line":""},
{"lineNum":"  501","line":"void AES128_encrypt(const AES128_ctx* ctx, size_t blocks, unsigned char* cipher16, const unsigned char* plain16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  502","line":"    while (blocks--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  503","line":"        AES_encrypt(ctx->rk, 10, cipher16, plain16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  504","line":"        cipher16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  505","line":"        plain16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  506","line":"    }"},
{"lineNum":"  507","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  508","line":""},
{"lineNum":"  509","line":"void AES128_decrypt(const AES128_ctx* ctx, size_t blocks, unsigned char* plain16, const unsigned char* cipher16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  510","line":"    while (blocks--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  511","line":"        AES_decrypt(ctx->rk, 10, plain16, cipher16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  512","line":"        cipher16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  513","line":"        plain16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  514","line":"    }"},
{"lineNum":"  515","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  516","line":""},
{"lineNum":"  517","line":"void AES192_init(AES192_ctx* ctx, const unsigned char* key24) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  518","line":"    AES_setup(ctx->rk, key24, 6, 12);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  519","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  520","line":""},
{"lineNum":"  521","line":"void AES192_encrypt(const AES192_ctx* ctx, size_t blocks, unsigned char* cipher16, const unsigned char* plain16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  522","line":"    while (blocks--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  523","line":"        AES_encrypt(ctx->rk, 12, cipher16, plain16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  524","line":"        cipher16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  525","line":"        plain16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  526","line":"    }"},
{"lineNum":"  527","line":""},
{"lineNum":"  528","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  529","line":""},
{"lineNum":"  530","line":"void AES192_decrypt(const AES192_ctx* ctx, size_t blocks, unsigned char* plain16, const unsigned char* cipher16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  531","line":"    while (blocks--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  532","line":"        AES_decrypt(ctx->rk, 12, plain16, cipher16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  533","line":"        cipher16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  534","line":"        plain16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  535","line":"    }"},
{"lineNum":"  536","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  537","line":""},
{"lineNum":"  538","line":"void AES256_init(AES256_ctx* ctx, const unsigned char* key32) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  539","line":"    AES_setup(ctx->rk, key32, 8, 14);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  540","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  541","line":""},
{"lineNum":"  542","line":"void AES256_encrypt(const AES256_ctx* ctx, size_t blocks, unsigned char* cipher16, const unsigned char* plain16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  543","line":"    while (blocks--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  544","line":"        AES_encrypt(ctx->rk, 14, cipher16, plain16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  545","line":"        cipher16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  546","line":"        plain16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  547","line":"    }"},
{"lineNum":"  548","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  549","line":""},
{"lineNum":"  550","line":"void AES256_decrypt(const AES256_ctx* ctx, size_t blocks, unsigned char* plain16, const unsigned char* cipher16) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  551","line":"    while (blocks--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  552","line":"        AES_decrypt(ctx->rk, 14, plain16, cipher16);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  553","line":"        cipher16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  554","line":"        plain16 += 16;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  555","line":"    }"},
{"lineNum":"  556","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "coin_fuzz_debug", "date" : "2023-08-02 12:12:49", "instrumented" : 374, "covered" : 0,};
var merged_data = [];
